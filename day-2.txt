
from fastapi import FastAPI
from fastapi.params import Body
from typing import Optional
from pydantic import BaseModel
from random import randrange

app = FastAPI()
# its model with bare min value expected
my_post = [
    {'title': 'user app', 'content': 'new content',
        'published': True, 'id': 101, 'rating': 9}
]
def findById(id):
    for p in my_post:
        if p['id']== id:
            return p

class Base(BaseModel):
    title: str
    content: str
    published: bool = True
    rating: Optional[int] = None

# dummy data

# load all the records
@app.get("/loaddata")
def loaddata():
    return {"message": my_post}

# insert new records
@app.post("/addpost")
def registerPost(payload: Base):
    post_dict = payload.dict()
    post_dict['id'] = randrange(0, 10000)
    my_post.append(post_dict)
    return {"data": my_post}

@app.get("/loaduser/{id}")
def loadUserById(id:int):
    data=findById(id)
    return {"User data": data}

